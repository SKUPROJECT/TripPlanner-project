plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    /* 1. runtimeOnly : 컴파일 할 때는 필요하지 않고 애플리케이션이 실행될 때만 필요
       2. compileOnly : 컴파일 할 때만 필요하고, 실행 시에는 필요 없는 의존성
       3. implementation : 컴파일, 실행 모두 필요
     */

    /* 1. web 의존성 */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    /* 2. JWT 의존성 */
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    /* 3. lombok 의존성 */
    implementation 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /* 4. DB 의존성 */
    implementation 'mysql:mysql-connector-java:8.0.33'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    /* 5. Swagger 의존성 */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    /* 6. Validation 의존성 */
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    /* 7. DEV 의존성 */
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}

tasks.named('test') {
    useJUnitPlatform()
}
